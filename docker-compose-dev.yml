version: "2.3"

services:  
  worker:
    restart: "no"
    mem_limit: 16G
    container_name: worker

    build: 
      context: ./llava_worker
      dockerfile: Dockerfile
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port ${WORKER_PORT}"

    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - TRANSFORMERS_CACHE=${TRANSFORMERS_CACHE}

    volumes:
      - ./llava_worker:/llava_worker

      # TEST ONLY
      - /home/shace_linux/.cache/huggingface/hub:/cache/

    runtime: nvidia

    ports:
      - ${WORKER_PORT}:${WORKER_PORT}
      
  neural_api:
    restart: "no"
    mem_limit: 2G
    container_name: neural_api

    build: 
      context: ./neural_api
      dockerfile: Dockerfile
    command: bash -c "uvicorn app.main:app --host 0.0.0.0 --port ${NEURAL_API_PORT}"

    volumes:
      - ./neural_api:/neural_api

    environment:
      - WORKER_PORT=${WORKER_PORT}

    ports:
      - ${NEURAL_API_PORT}:${NEURAL_API_PORT}

  dff_api:
    restart: "no"
    mem_limit: 2G
    container_name: dff_api

    build: 
      context: ./dff_api
      dockerfile: Dockerfile
    command: bash -c "python3 app/dff_main.py"

    volumes:
      - ./dff_api:/dff_api

    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - NEURAL_API_PORT=${NEURAL_API_PORT}

  dashboard:
    env_file: [.env]
    build:
      context: ./dff_api/stats/
      dockerfile: dockerfile_stats
    image: ghcr.io/deeppavlov/superset_df_dashboard:latest
    depends_on:
      dashboard-metadata:
        condition: service_healthy
      clickhouse:
        condition: service_started
    ports:
      - "8088:8088"

  dashboard-metadata:
    env_file: [.env]
    image: postgres:latest
    restart: unless-stopped
    expose:
      - "5433"
    ports:
      - 5433:5433
    command: -p 5433
    healthcheck:
      test: pg_isready -p 5433 --username=$${POSTGRES_USERNAME}
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - dashboard-data:/var/lib/postgresql/data

  clickhouse:
    env_file: [.env]
    image: clickhouse/clickhouse-server:latest
    restart: unless-stopped
    ports:
      - '8123:8123'
      - '8443:8443'
      - '9000:9000'
    volumes:
      - ch-data:/var/lib/clickhouse/
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-col
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./dff_api/otel/otelcol-config.yml:/etc/otelcol-config.yml:ro
      - ./dff_api/otel/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml:ro
    ports:
      - "4317:4317"    # OTLP over gRPC receiver
      - "4318:4318"    # OTLP over HTTP receiver

volumes:
  ch-data:
  dashboard-data:
  mysql-data:
  postgres-data:
  redis-data:
  mongo-data:
  ydb-data:
  ydb-certs: